digraph ast {
    subgraph cluster_client_packets {
        label="client_packets";
        "client_packets.ClientPacket"[label="{ClientPacket|pub client_id: Id\lpub conv_id: Id\lpub message: ClientMessage}"][shape="record"];
        "client_packets.ClientInfo"[label="{ClientInfo|pub client_id: Id\lpub client_version: String}"][shape="record"];
        "client_packets.ClientPacket" -> "crate.Id"[label=""][arrowhead="diamond"];
        "client_packets.ClientInfo" -> "crate.Id"[label=""][arrowhead="diamond"];
    }
    subgraph cluster_error {
        label="error";
        "error.AError"[label="{AError|et: AET\lpub additional_info: Vec<String>\llocation: Location<'static>\ltrace: Backtrace|new(et: AET) -> Self\llog_exit(&self) -> !\llog(&self)}"][shape="record"];
        "error.AError" -> "std::backtrace.Backtrace"[label=""][arrowhead="diamond"];
        "error.AError" -> "std.process.exit"[label=""][style="dashed"][arrowhead="vee"];
        "error.AError" -> "crate.log_err"[label=""][style="dashed"][arrowhead="vee"];
        "error.AError" -> "crate.log_raw"[label=""][style="dashed"][arrowhead="vee"];
        "error.AError" -> "std::fmt.Display"[label=""][style="dashed"][arrowhead="onormal"];
        "error.AError" -> "std.io.Error"[label=""][style="dashed"][arrowhead="vee"];
    }
    subgraph cluster_lib {
        label="lib";
        "lib.Id"[label="{Id|new() -> Self\lfrom_bytes(b: [u8;16]) -> Self\linto_bytes(self) -> [u8;16]}"][shape="record"];
        "lib.Id" -> "uuid.Uuid"[label=""][style="dashed"][arrowhead="vee"];
        "lib.Id" -> "lib.b"[label=""][style="dashed"][arrowhead="vee"];
        "lib.Id" -> "std::fmt.Debug"[label=""][style="dashed"][arrowhead="onormal"];
        "lib.Id" -> "std::fmt.Display"[label=""][style="dashed"][arrowhead="onormal"];
    }
    subgraph cluster_messaging {
        label="messaging";
        "messaging.ClientHandle"[label="Interface\lClientHandle"][shape="record"];
        "messaging.ClientMessenger"[label="{ClientMessenger|register_server_receiver()(&mut self)}"][shape="record"];
    }
    subgraph cluster_mod {
        label="mod";
        "mod.Result" -> "mod.e"[label=""][style="dashed"][arrowhead="vee"];
        "mod.NetResult" -> "mod.e"[label=""][style="dashed"][arrowhead="vee"];
    }
    subgraph cluster_server_packets {
        label="server_packets";
        "server_packets.ServerPacket"[label="{ServerPacket|pub conv_id: Id\lpub message: ServerMessage}"][shape="record"];
        "server_packets.ServerInfo"[label="{ServerInfo|pub server_version: String\lpub mod_profile: String\lpub mod_version: String\lpub mods: Vec<(String, Vec<String>, String, u64)>}"][shape="record"];
        "server_packets.ServerPacket" -> "crate.Id"[label=""][arrowhead="diamond"];
    }
    subgraph cluster_util {
        label="util";
        "util.unzip_archive"[label="unzip_archive"];
        "util.type_to_id"[label="type_to_id"];
    }
}
